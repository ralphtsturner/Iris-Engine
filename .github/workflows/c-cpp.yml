name: C++ Build with Bear

on:
  push:
    branches:
      - main  # Trigger on pushes to the main branch
  pull_request:
    branches:
      - main  # Trigger on pull requests targeting the main branch

jobs:
  build:
    runs-on: ubuntu-latest  # Use the latest Ubuntu environment
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2  # Checkout your code from the repository

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential  # Install essential build tools
          sudo apt-get install -y libsdl2-dev libsdl2-image-dev  # Install SDL2 dependencies
          sudo apt-get install -y bear  # Install Bear (Build EAR) to generate compile_commands.json
          sudo apt-get install -y xvfb  # Install Xvfb (virtual framebuffer)
          bear --version  # Check if bear was installed correctly

      - name: Start Xvfb to simulate a display
        run: |
          Xvfb :99 -screen 0 1280x1024x24 &  # Start Xvfb on display :99

      - name: Set the DISPLAY environment variable
        run: |
          export DISPLAY=:99  # Set the DISPLAY environment variable to the virtual framebuffer

      - name: Change directory to Iris Engine
        run: cd "Iris Engine"  # Change to the directory containing the Makefile

      - name: Generate compilation database with Bear
        run: |
          cd "Iris Engine"  # Change directory to where Makefile is located
          bear -- make  # Use Bear to wrap the make command and generate compile_commands.json
          
      - name: Build with make
        run: |
          cd "Iris Engine"  # Change directory to where Makefile is located
          make  # Run make to build your project (this is also wrapped by bear)

      - name: Run tests (optional)
        run: |
          cd "Iris Engine"  # Change directory to where Makefile is located
          ./bin/main  # Run the compiled executable (optional step)
